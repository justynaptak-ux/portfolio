{"version":3,"sources":["webpack:///./src/components/Works.js","webpack:///./src/components/Technologies.js","webpack:///./src/components/Photos.js","webpack:///./src/components/Mainphoto.js","webpack:///./src/pages/index.js"],"names":["Works","data","console","log","className","fluid","waymore","childImageSharp","href","seus","casino","Technologies","html","css","javascript","react","gatsby","node","github","vscode","figma","Photos","Background","cover","Layout","Mainphoto"],"mappings":"kvfA+FeA,EAhED,WACZ,IAAMC,EAAI,OAEV,OADAC,QAAQC,IAAIF,GAEV,6BACE,6BAASG,UAAU,YAAnB,SACA,yBAAKA,UAAU,WACb,kBAAC,IAAD,CACEA,UAAU,QACVC,MAAOJ,EAAKK,QAAQC,gBAAgBF,QAGtC,yBAAKD,UAAU,eACb,4BACE,uBAAGI,KAAK,8FAAR,eAIF,6BANF,4QAYF,yBAAKJ,UAAU,WACb,kBAAC,IAAD,CACEA,UAAU,QACVC,MAAOJ,EAAKQ,KAAKF,gBAAgBF,QAEnC,yBAAKD,UAAU,eACb,4BACE,uBAAGI,KAAK,gGAAR,YAIF,6BANF,8TAcF,yBAAKJ,UAAU,WACb,kBAAC,IAAD,CACEA,UAAU,QACVC,MAAOJ,EAAKS,OAAOH,gBAAgBF,QAErC,yBAAKD,UAAU,eACb,uBAAGI,KAAK,iGACN,oDAEF,6BAJF,oS,YCwBOG,EA9BM,WACnB,IAAMV,EAAI,OACV,OACE,6BACE,6BAASG,UAAU,YAAnB,mBACA,yBAAKA,UAAU,gBACb,yMAKA,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAOA,UAAU,SAASC,MAAOJ,EAAKW,KAAKL,gBAAgBF,QAC3D,kBAAC,IAAD,CAAOD,UAAU,SAASC,MAAOJ,EAAKY,IAAIN,gBAAgBF,QAC1D,kBAAC,IAAD,CACED,UAAU,SACVC,MAAOJ,EAAKa,WAAWP,gBAAgBF,QAEzC,kBAAC,IAAD,CAAOD,UAAU,SAASC,MAAOJ,EAAKc,MAAMR,gBAAgBF,QAC5D,kBAAC,IAAD,CAAOD,UAAU,SAASC,MAAOJ,EAAKe,OAAOT,gBAAgBF,QAC7D,kBAAC,IAAD,CAAOD,UAAU,SAASC,MAAOJ,EAAKgB,KAAKV,gBAAgBF,QAC3D,kBAAC,IAAD,CAAOD,UAAU,SAASC,MAAOJ,EAAKiB,OAAOX,gBAAgBF,QAC7D,kBAAC,IAAD,CAAOD,UAAU,SAASC,MAAOJ,EAAKkB,OAAOZ,gBAAgBF,QAC7D,kBAAC,IAAD,CAAOD,UAAU,SAASC,MAAOJ,EAAKmB,MAAMb,gBAAgBF,YC5DvDgB,EAlCA,WACb,OACE,6BACE,6BAASjB,UAAU,YAAnB,eACA,yBAAKA,UAAU,eACb,wLAKA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,eACf,yBAAKA,UAAU,eACf,yBAAKA,UAAU,gBAEjB,yBAAKA,UAAU,UACZ,IACD,yBAAKA,UAAU,eACf,yBAAKA,UAAU,eACf,yBAAKA,UAAU,gBAEjB,yBAAKA,UAAU,UACZ,IACD,yBAAKA,UAAU,cACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,mB,qBCYZkB,EAtBI,WACjB,IAAMrB,EAAI,OAEV,OADAC,QAAQC,IAAIF,GAEV,6BACE,kBAAC,IAAD,CACEG,UAAU,aACVC,MAAOJ,EAAKsB,MAAMhB,gBAAgBF,OAElC,yBAAKD,UAAU,gBACb,sDAC0B,6BAD1B,kDAEa,6BAFb,gEAKA,yBAAKA,UAAU,eAAf,wBCzBK,4BACb,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAD,MACA,0BAAMrB,UAAU,mBACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,U","file":"component---src-pages-index-js-8cd9db94719430573c93.js","sourcesContent":["import React from \"react\"\r\nimport Image from \"gatsby-image\"\r\nimport \"../components/style.css\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nconst GetExamples = graphql`\r\n  {\r\n    waymore: file(relativePath: { eq: \"waymore.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    seus: file(relativePath: { eq: \"seus.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    casino: file(relativePath: { eq: \"casino.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Works = () => {\r\n  const data = useStaticQuery(GetExamples)\r\n  console.log(data)\r\n  return (\r\n    <div>\r\n      <section className=\"sections\">works</section>\r\n      <div className=\"example\">\r\n        <Image\r\n          className=\"image\"\r\n          fluid={data.waymore.childImageSharp.fluid}\r\n        ></Image>\r\n\r\n        <div className=\"description\">\r\n          <h3>\r\n            <a href=\"https://www.figma.com/proto/7WJt1vaekucXoIg47bF3lh/Waymore?node-id=61%3A4&scaling=min-zoom\">\r\n              1. Waymore\r\n            </a>\r\n          </h3>\r\n          <br /> Waymore is a creative collective created by my friend who\r\n          invited me to co-create it. This model in Figma is my idea at the look\r\n          of the future site, based on the colors, fonts and logos provided to\r\n          me by Paweł. Working with neon, intensive colors was new for me.\r\n        </div>\r\n      </div>\r\n      <div className=\"example\">\r\n        <Image\r\n          className=\"image\"\r\n          fluid={data.seus.childImageSharp.fluid}\r\n        ></Image>\r\n        <div className=\"description\">\r\n          <h3>\r\n            <a href=\"https://www.figma.com/proto/sxRcQKsyXyS9B4HTBtaU9Q/seus-v3?node-id=46%3A203&scaling=min-zoom\">\r\n              2. SEUS\r\n            </a>\r\n          </h3>\r\n          <br />\r\n          SEUS is a company dealing in website positioning. My task was to\r\n          prepare a prototype based on the already existing logo and view of the\r\n          previous version. This template was created on the basis of a\r\n          marketing brief and conversations with the client. This is the third\r\n          version of the layout prepared for one client.\r\n        </div>\r\n      </div>\r\n      <div className=\"example\">\r\n        <Image\r\n          className=\"image\"\r\n          fluid={data.casino.childImageSharp.fluid}\r\n        ></Image>\r\n        <div className=\"description\">\r\n          <a href=\"https://www.figma.com/proto/sLBtAKpy23JnQZrfInV4BR/Untitled?node-id=187%3A12&scaling=min-zoom\">\r\n            <h3>3. Casino del Papel</h3>\r\n          </a>\r\n          <br />\r\n          This is the third project that is part of the bootcamp in which I\r\n          participated. My task was to come up with a form in which we can\r\n          present a platform for playing two games - blackjack and sapper. The\r\n          idea, content, colors and prototype was invented by me and the game\r\n          came to fruition.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Works\r\n","import React from \"react\"\r\nimport  \"../components/style.css\"\r\nimport Image from \"gatsby-image\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nconst GetIcons = graphql`\r\n  {\r\n    html: file(relativePath: { eq: \"html.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    css: file(relativePath: { eq: \"css.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    javascript: file(relativePath: { eq: \"javascript.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    react: file(relativePath: { eq: \"react.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    node: file(relativePath: { eq: \"node.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    github: file(relativePath: { eq: \"github.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    gatsby: file(relativePath: { eq: \"gatsby.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    figma: file(relativePath: { eq: \"figma.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    vscode: file(relativePath: { eq: \"vscode.jpg\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Technologies = () => {\r\n  const data = useStaticQuery(GetIcons)\r\n  return (\r\n    <div>\r\n      <section className=\"sections\">web development</section>\r\n      <div className=\"technologies\">\r\n        <p>\r\n          During this year I learned many useful digital solutions. Starting\r\n          with programming languages ​​and ending with graphic programs. I am\r\n          familiar with technologies such as:\r\n        </p>\r\n        <div className=\"technologiesbox\">\r\n          <Image className=\"circle\" fluid={data.html.childImageSharp.fluid} />\r\n          <Image className=\"circle\" fluid={data.css.childImageSharp.fluid} />\r\n          <Image\r\n            className=\"circle\"\r\n            fluid={data.javascript.childImageSharp.fluid}\r\n          />\r\n          <Image className=\"circle\" fluid={data.react.childImageSharp.fluid} />\r\n          <Image className=\"circle\" fluid={data.gatsby.childImageSharp.fluid} />\r\n          <Image className=\"circle\" fluid={data.node.childImageSharp.fluid} />\r\n          <Image className=\"circle\" fluid={data.github.childImageSharp.fluid} />\r\n          <Image className=\"circle\" fluid={data.vscode.childImageSharp.fluid} />\r\n          <Image className=\"circle\" fluid={data.figma.childImageSharp.fluid} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Technologies\r\n","import React from \"react\"\r\n\r\nconst Photos = () => {\r\n  return (\r\n    <div>\r\n      <section className=\"sections\">photography</section>\r\n      <div className=\"photography\">\r\n        <p>\r\n          I bought my first camera a year and a half ago. The following works\r\n          are the result of my self-study. I work with Canon 550d camera and\r\n          Yongnuo 35mm lens.\r\n        </p>\r\n        <div className=\"photocontainer\">\r\n          <div className=\"photos\">\r\n            <div className=\"photoitem1\"></div>\r\n            <div className=\"photoitem1\"></div>\r\n            <div className=\"photoitem1\"></div>\r\n          </div>\r\n          <div className=\"photos\">\r\n            {\" \"}\r\n            <div className=\"photoitem2\"></div>\r\n            <div className=\"photoitem2\"></div>\r\n            <div className=\"photoitem2\"></div>\r\n          </div>\r\n          <div className=\"photos\">\r\n            {\" \"}\r\n            <div className=\"photoitem\"></div>\r\n            <div className=\"photoitem\"></div>\r\n            <div className=\"photoitem\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Photos\r\n","import React from \"react\";\r\nimport \"../components/style.css\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport BackgroundImage from \"gatsby-background-image\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nconst getCover = graphql`\r\n  {\r\n    cover: file(relativePath: { eq: \"coverphoto.jpeg\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Background = () => {\r\n  const data = useStaticQuery(getCover);\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      <BackgroundImage\r\n        className=\"background\"\r\n        fluid={data.cover.childImageSharp.fluid}\r\n      >\r\n        <div className=\"mainsentence\">\r\n          <b>\r\n            Hi, my name is Justyna, <br /> and I am deeply interested in user\r\n            experience <br />\r\n            and catching moment with my camera, based in Wrocław, Poland\r\n          </b>\r\n          <div className=\"coordinates\">17°02′E, 51°06′N</div>\r\n        </div>\r\n      </BackgroundImage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Background;\r\n\r\n// export const pageQuery = graphql`\r\n// query {\r\n//     indexImage: file{relativePath: { eq: \"coverphoto.jpeg\" }} {\r\n//         childImageSharp {\r\n//             fluid(max-width: 1800) {\r\n//                 ...GatsbyImageSharpFluid\r\n//             }\r\n//         }\r\n//     }\r\n\r\n// }\r\n// `;\r\n","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Cover from \"../components/Cover\";\r\nimport Works from \"../components/Works\";\r\nimport Technologies from \"../components/Technologies\";\r\nimport Photos from \"../components/Photos\";\r\nimport Mainphoto from \"../components/Mainphoto\";\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <Mainphoto />\r\n    <main className=\"margincontainer\">\r\n      <Works />\r\n      <Technologies />\r\n      <Photos />\r\n    </main>\r\n  </Layout>\r\n);\r\n"],"sourceRoot":""}